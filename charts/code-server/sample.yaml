nameOverride: ""
fullnameOverride: ""

dirs:
  home: /config
  setup: /setup
  download: /tmp/extensions
  extensions: /config/extensions

java:
  name: JavaSE-11
  version: 20.2.0.r11-grl
  javadoc: https://docs.oracle.com/en/java/javase/11/docs/api

nexus:
  url: http://my-nexus.sqylabs:8081
  username: admin
  password: password

extraEndpoints:
  - host: api.sqylabs.dev
    servicePort: 8080
    servicePortName: api
    containerPort: 8080
    containerPortName: api
  - host: ui.sqylabs.dev
    servicePort: 8081
    servicePortName: ui
    containerPort: 8081
    containerPortName: ui

ingress:
  create: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/server-snippet: |-
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Accept-Encoding gzip;
      proxy_set_header Host $host;
      sub_filter '</head>' '<link type="text/css" href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap" rel="stylesheet"></head>';
      sub_filter 'font-src' 'font-src fonts.gstatic.com';
      sub_filter 'style-src' 'style-src fonts.googleapis.com';
      sub_filter_once on;
  host: code.sqylabs.dev
  tls:
    - hosts:
        - "*.sqylabs.dev"
      secretName: sqylabs-certs

persistentVolume:
  create: true
  spec:
    accessModes: ["ReadWriteOnce"]
    capacity:
      storage: 10Gi
    hostPath:
      path: /home/gokhun/pvs/code

service:
  type: ClusterIP
  port: 8443

serviceAccount:
  create: true
  name: ""

secret:
  password: password
  sudoPassword: password

statefulSet:
  env:
    pgid: 1000
    puid: 1000
    tz: Europe/Istanbul
    password: password
    sudoPassword: password
  image: "linuxserver/code-server"
  resources:
    requests:
      cpu: 2000m
      memory: 6144Mi
    limits:
      cpu: 2000m
      memory: 6144Mi
  volumeClaim:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 10Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
